// Generated by CoffeeScript 1.6.3
(function() {
  var Pocket, extend, makeUrl, qs, request;

  qs = require('qs');

  request = require('request');

  Pocket = (function() {
    function Pocket() {}

    Pocket.apiHost = 'https://getpocket.com';

    Pocket.requestTokenUri = '/v3/oauth/request';

    Pocket.authorizeUri = '/auth/authorize';

    Pocket.accessTokenUri = '/v3/oauth/authorize';

    Pocket.retrieveUri = '/v3/get';

    Pocket.addUri = '/v3/add';

    Pocket.modifyUri = '/v3/send';

    Pocket.baseParams = {
      consumer_key: Pocket.consumer_key,
      access_token: Pocket.access_token
    };

    Pocket.setAccessToken = function(token) {
      return Pocket.access_token = token;
    };

    Pocket.init = function(consumer_key, redirect_uri, access_token) {
      Pocket.consumer_key = consumer_key;
      Pocket.redirect_uri = redirect_uri;
      return Pocket.access_token = access_token || '';
    };

    Pocket.getUrl = function(apiType) {
      return "" + Pocket.apiHost + Pocket["" + apiType + "Uri"];
    };

    Pocket.getRequestTokenUrl = function() {
      return Pocket.getUrl("requestToken");
    };

    Pocket.getAuthorizeUrl = function() {
      return Pocket.getUrl("authorize");
    };

    Pocket.getAccessTokenUrl = function() {
      return Pocket.getUrl("accessToken");
    };

    Pocket.get = function(conditions, callback) {
      var url;
      if (conditions == null) {
        conditions = {};
      }
      if (callback == null) {
        callback = function() {};
      }
      if (typeof conditions === 'function') {
        callback = conditions;
        conditions = {};
      }
      conditions = extend(conditions, Pocket.baseParams);
      url = makeUrl(Pocket.getUrl('retrieve'), conditions);
      return request.get(url, function(err, resp, ret) {
        return callback(err, JSON.parse(ret));
      });
    };

    Pocket.add = function(data, callback) {
      if (callback == null) {
        callback = function() {};
      }
      data = extend(data, Pocket.baseParams);
      return request.post({
        headers: {
          'content-type': 'application/x-www-form-urlencoded'
        },
        url: Pocket.getUrl('add'),
        body: qs.stringify(data)
      }, function(err, resp, ret) {
        return callback(err, JSON.parse(ret));
      });
    };

    Pocket.send = function(actions, callback) {
      var url;
      if (callback == null) {
        callback = function() {};
      }
      url = makeUrl(Pocket.getUrl('modify'), Pocket.baseParams);
      url += '&actions=' + encodeURIComponent(JSON.stringify(actions));
      return request.get(url, function(err, resp, ret) {
        return callback(err, JSON.parse(ret));
      });
    };

    return Pocket;

  })();

  makeUrl = function(prefix, query) {
    if (typeof query !== 'string') {
      query = qs.stringify(query);
    }
    return "" + prefix + "?" + query;
  };

  extend = function(a, b) {
    var key, val;
    for (key in b) {
      val = b[key];
      a[key] = val;
    }
    return a;
  };

  module.exports = Pocket;

}).call(this);
